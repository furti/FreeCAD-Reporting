# SQL Subset Grammar

grammar sql

    Statement <- `Select` __ Columns __
        FromClause
        WhereClause?
        _ Semicolon %make_select_statement
    
    FromClause <- `From` __ Reference %make_from_clause
   
    WhereClause <- __ `Where` __ BooleanExpression %make_where_clause

    Columns <- (Column (_ "," _ Column)*) %prepare_columns

    Column <- Asterisk / Function / Operand

    Operand <- Number / Literal / Reference

    Reference <- [a-zA-Z0-9]+ %make_reference

    Literal <- "'" (!"'" .)* "'" %make_literal

    Number <- [0-9]+ %make_number

    Semicolon <- ";"?

    Asterisk <- "*" %prepare_asterisk

    # optional whitespace
    _ <- [ \t\r\n]*

    # mandatory whitespace
    __ <- [ \t\r\n]+

    # Boolean Start
    BooleanExpression <- BooleanComparison __ BooleanOperator __ BooleanExpression
        / BooleanComparison
        / "(" _ BooleanExpression _ ")" (__ BooleanOperator __ BooleanExpression)*
    
    BooleanComparison <- Operand _ ComparisonOperator _ Operand %make_boolean_comparison

    BooleanOperator <- `And` %make_boolean_operator_and / `Or` %make_boolean_operator_or

    ComparisonOperator <- ">=" %make_comp_operator_gte
        / "<=" %make_comp_operator_lte
        / "!=" %make_comp_operator_neq
        / "=" %make_comp_operator_eq
        / ">" %make_comp_operator_gt
        / "<" %make_comp_operator_lt

    # Boolean End

    # Functions
    Function <- FunctionName _ "(" _ (Asterisk / Operand) _ ")" %make_function

    FunctionName <- `Sum` %sum_operator / `Count` %count_operator / `Min` %min_operator / `Max` %max_operator

    # Functions End

